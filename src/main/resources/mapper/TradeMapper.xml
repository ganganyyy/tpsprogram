<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.tpssystem.dao.TradeMapper" >

    <select id="selectAllByCreatorId"  resultType="Map">

        select t.id as tradeId,u.username as creatorname,u.duty as creatorDuty,t.match_id as matchId,
        t.product_id as productId,t.price,i.version,t.relative_id as relativeId,u2.username as relativename,u2.duty as relativeDuty
        from trade t left join transaction r on t.id=r.trade_id left join interaction i on r.interaction_id =i.id
        left join User u on t.creator_id=u.id left join User u2 on t.relative_id=u2.id
        where t.creator_id=#{creatorId};
    </select>

    <select id="selectAllBySales"  resultType="Map">
        select  t.id as tradeId,u.username as creatorname,u.duty as creatorDuty, t.match_id as matchId,
        t.product_id as productId,t.price,i.version,t.relative_id as relativeId,u2.username as relativename,u2.duty as relativeDuty
        from trade t left join transaction r on t.id=r.trade_id left join interaction i on r.interaction_id =i.id
        left join User u on t.creator_id=u.id left join User u2 on t.relative_id=u2.id
        where u.duty='s';
    </select>

    <select id="selectAll"  resultType="Map" >

        select t.id as tradeId,u.id as creatorId ,u.username as creatorname,u.duty as creatorDuty,t.match_id as matchId,
        p.cusip as productId,t.price,i.version,t.relative_id as relativeId,u2.username as relativename,u2.duty as relativeDuty,
        i.create_time,i.reject_code,i.reject_reason
        from trade t left join transaction r on t.id=r.trade_id left join interaction i on r.interaction_id =i.id
        left join User u on t.creator_id=u.id left join User u2 on t.relative_id=u2.id left join product p on p.id=t.product_id
        where (t.creator_id=#{creatorId} or u.duty='s') and t.id NOT IN (
        select origin_id from trade where origin_id is not null);
    </select>
    <update id="updateForPrice">
        update trade set price=#{price} where id=#{id}
    </update>
    <select id="selectOneById"  resultType="Trade" >
        select * from trade where id=#{id}
    </select>

    <insert id="insertOneTrade" parameterType="Trade" useGeneratedKeys="true" keyProperty="id">
    insert into trade
    values(#{id},#{creator_id},#{relative_id},#{match_id},#{product_id},#{price},#{origin_id})
    </insert>
    <update id="updateMatchId">
        update trade set match_id=#{matchId} where id=#{id}
    </update>

    <insert id = "addTrade" parameterType="com.ssm.tpssystem.domain.Trade" useGeneratedKeys="true" keyProperty="id">

        INSERT INTO trade (creator_id, relative_id, product_id, price)
        VALUES (#{creator_id}, #{relative_id}, #{product_id}, #{price})
    </insert>
    <select id="findTradeById" parameterType="Integer" resultType="com.ssm.tpssystem.domain.Trade">
        SELECT * FROM trade
        WHERE id = #{id}
    </select>
</mapper>
